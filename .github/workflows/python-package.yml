# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -e .[test,style,build]

    - name: Lint with black
      run: black --check .

    - name: Lint with flake8
      run: flake8 . --show-source --statistics

    - name: Lint with isort
      run: isort --check --diff .
      
    - name: Check with mypy
      run: mypy src

    - name: Test with pytest
      run: pytest

    - name: Build
      run: python3 -m build

    - name: Test with twine
      run: twine check --strict dist/*

    - name: Upload built package
      uses: actions/upload-artifact@v3
      if: ${{ matrix.python-version == '3.8' }}
      with:
        name: Package
        path: dist

    - name: Collect coverage
      if: ${{ matrix.python-version == '3.8' }}
      run:
        coverage html

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: ${{ matrix.python-version == '3.8' }}
      with:
        name: Coverage
        path: htmlcov


  docs:

    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -e .[docs]

    - name: Build documentation
      run: |
        sphinx-build -b html docs dist/docs
        sphinx-build -b linkcheck docs dist/docs

    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: Docs
        path: dist/docs
